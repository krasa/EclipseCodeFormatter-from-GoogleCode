=Instructions=
 # [http://plugins.intellij.net/plugin/?idea&id=6546 Download the plugin and install] 
 #  [HowTo#Getting_the_Eclipse_code_formatter_preferences_file enable project specific formatter settings in Eclipse to get preference file] or [HowTo#Getting_the_Eclipse_code_formatter_profiles export profiles]
 #  set path to eclipse preference file or to exported profiles file (IntelliJ - Settings - Eclipse Code Formatter - field "Eclipse preference file"), when using exported profiles, select desired profile in the combobox "Java formatter profile" 
 #  format code as usual, you can turn on or off notification about the  result(Settings - Notifications) 
 #  use ctrl + ~ for quick switch between formatters or icon at main toolbar    

* Possible problems with formatting : *
 * trailing spaces inside javadocs are stripped.  Solution: set "Strip trailing spaces on save" to "None" 
 * file seems to be formatted differently: probably tab size and indendation is set differently than in eclipse (Settings-Code Style-Java). Using of either tab only or space only whitespace is recommended.
 * Eclipse indendation is configured for 2 spaces, but a new line gets indented by 4 spaces when Enter is pressed. Solution: change code style in IntelliJ. Not all things get formatted by this plugin.
== Optimizing imports ==
 * set "Class count to use import with '`*`'" and "Name count to use static import with '`*`'" to 99 or more (Settings - Code Style - Imports)
 * IntelliJ's Import Optimizing must be turned off (turn on Settings-Editor-Show "Reformat Code" dialog, and then in that dialog turn off Import Optimizing) (it is automaticly turned off from version 2.4)
  

== Getting the Eclipse code formatter profiles ==
 # Go to Windows | Preferences | Java| Code Style | Formatter and click on "Export all..." button.
 # Eclipse do not export default profiles, so you have to make your own
 # the result should look like [http://code.google.com/p/eclipse-code-formatter-intellij-plugin/source/browse/EclipseFormatter/test/resources/format.xml this]

== Getting the Eclipse code formatter preferences file ==
 # With your project open in Eclipse's workspace, right-click the project and choose Properties.
 # Go to Java Code Style | Formatter and select Enable project specific settings.
 # Also in the project properties, go to Java Compiler and select Enable project specific settings. *Make sure that the Compiler compliance level is set right.*
 # Click OK to save the settings.
 # Go to the .settings directory inside your project's directory. There you will find the org.eclipse.jdt.core.prefs file which contains the Eclipse formatter settings.
 # the result should look like [http://code.google.com/p/eclipse-code-formatter-intellij-plugin/source/browse/EclipseFormatter/test/resources/org.eclipse.jdt.core.prefs this]


===Java language level is set to 1.5 by default. For 1.6+ make sure following lines are in the config file===
 * org.eclipse.jdt.core.compiler.compliance=1.6
 * org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
 * org.eclipse.jdt.core.compiler.source=1.6


== Troubleshooting==
If it is mysteriously not working, edit IntelliJ IDEA XX\bin\log.xml:
add following lines before <root>:

	<category name="krasa.formatter">
		<level value="DEBUG"/>
	</category>

and restart. Then send me the log...